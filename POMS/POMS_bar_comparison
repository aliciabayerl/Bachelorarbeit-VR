import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import os

# Plot average before and after scores of each condition of all mood states DEQ

folder_path = 'POMS'
image_path = 'POMS/Plot_Images'
input_file = 'participant_scores.csv'
file_path = os.path.join(folder_path, input_file)
participant_scores = pd.read_csv(file_path)


mood_states = ['Tension', 'Depression', 'Anger', 'Vigor', 'Fatigue', 'Confusion']

participant_scores.rename(columns={'After Anger_x': 'After Anger', 'Before Anger_x': 'Before Anger'}, inplace=True)

# Calculate the overall average scores before and after the intervention
overall_average_before = participant_scores[[f'Before {mood}' for mood in mood_states]].mean()
overall_average_after = participant_scores[[f'After {mood}' for mood in mood_states]].mean()

# Set the plotting parameters
plt.rcParams.update({
    'axes.labelsize': 14,   # Fontsize of the x and y labels
    'xtick.labelsize': 14,   # Fontsize of the x tick labels
    'ytick.labelsize': 14,   # Fontsize of the y tick labels
    'legend.fontsize': 14,   # Fontsize of the legend
    'font.family': 'sans-serif',
    'font.sans-serif': 'Arial'
})

# Create the plot
bar_width = 0.35
x = np.arange(len(mood_states))

fig, ax = plt.subplots(figsize=(8, 5))

before_bars = ax.bar(x - bar_width/2, overall_average_before, bar_width, label='Before', color='#abd9e9')
after_bars = ax.bar(x + bar_width/2, overall_average_after, bar_width, label='After', color='#4575b4')

# Customize the plot
ax.set_xlabel('Mood State')
ax.set_ylabel('Average Score')
#ax.set_title('Overall Average Mood Scores Before and After Intervention')
ax.set_xticks(x)
ax.set_xticklabels(mood_states)
ax.legend(loc='upper left')

# Annotate bars with values
for bar in before_bars + after_bars:
    yval = bar.get_height()
    ax.text(bar.get_x() + bar.get_width()/2, yval, f'{yval:.1f}', ha='center', va='bottom')

# Save and show the plot
output_image = os.path.join(image_path, 'DEQ_overall_before_after_bar.png')
plt.tight_layout()
plt.savefig(output_image, dpi=300)
plt.show()
