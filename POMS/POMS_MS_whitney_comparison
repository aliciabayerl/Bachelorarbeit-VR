import pandas as pd
import os
from scipy.stats import mannwhitneyu

# Load your data
folder_path = 'POMS'
input_file_no_motion_sickness = 'POMS_MS_participant_scores.csv'
input_file_motion_sickness = 'POMS_MSyes_participant_scores.csv'

file_path_no_motion_sickness = os.path.join(folder_path, input_file_no_motion_sickness)
file_path_motion_sickness = os.path.join(folder_path, input_file_motion_sickness)

data_no_motion_sickness = pd.read_csv(file_path_no_motion_sickness)
data_motion_sickness = pd.read_csv(file_path_motion_sickness)

# Calculate change scores
for data in [data_no_motion_sickness, data_motion_sickness]:
    data['Change_Tension'] = data['After Tension'] - data['Before Tension']
    data['Change_Vigor'] = data['After Vigor'] - data['Before Vigor']
    data['Change_Confusion'] = data['After Confusion'] - data['Before Confusion']
    data['Change_Fatigue'] = data['After Fatigue'] - data['Before Fatigue']
    data['Change_Anger'] = data['After Anger'] - data['Before Anger']
    data['Change_Depression'] = data['After Depression'] - data['Before Depression']

change_scores = ['Change_Tension','Change_Vigor', 'Change_Confusion', 'Change_Fatigue', 'Change_Anger', 'Change_Depression']


# Function to calculate rank-biserial correlation
def rank_biserial_correlation(U, n1, n2):
    return 1 - (2 * U) / (n1 * n2)

print("Mann-Whitney U Test Results:")
for score in change_scores:
    group_no_motion_sickness = data_no_motion_sickness[score]
    group_motion_sickness = data_motion_sickness[score]
    
    # Mann-Whitney U test
    stat, p_value = mannwhitneyu(group_no_motion_sickness, group_motion_sickness, alternative='two-sided')
    n1 = len(group_no_motion_sickness)
    n2 = len(group_motion_sickness)
    effect_size = rank_biserial_correlation(stat, n1, n2)
    
    print(f'{score}: Statistics={stat}, p-value={p_value}, Effect Size={effect_size:.3f}')
    if p_value < 0.05:
        print(f'There is a significant difference in {score} across the groups')
    else:
        print(f'There is no significant difference in {score} across the groups')
    print()
