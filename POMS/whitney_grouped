import pandas as pd
import os
from scipy.stats import mannwhitneyu

# Load your data
folder_path = 'POMS'
input_file = 'participant_scores.csv'
file_path = os.path.join(folder_path, input_file)
data = pd.read_csv(file_path)

# Calculate change scores

data['Change_Tension'] = data['After Tension'] - data['Before Tension']
data['Change_Vigor'] = data['After Vigor'] - data['Before Vigor']
data['Change_Confusion'] = data['After Confusion'] - data['Before Confusion']
data['Change_Fatigue'] = data['After Fatigue'] - data['Before Fatigue']
data['Change_Anger'] = data['After Anger_x'] - data['Before Anger_x']
data['Change_Depression'] = data['After Depression'] - data['Before Depression']

change_scores = [
    'Change_Tension', 'Change_Vigor', 'Change_Confusion', 'Change_Fatigue', 
    'Change_Anger', 'Change_Depression'
]

# Group conditions
data['Condition_Grouped'] = data['Condition'].replace({1: '1_and_2', 2: '1_and_2'})

groups = {
    '0': data[data['Condition_Grouped'] == 0],
    '1_and_2': data[data['Condition_Grouped'] == '1_and_2']
}

# Function to calculate rank-biserial correlation
def rank_biserial_correlation(U, n1, n2):
    return 1 - (2 * U) / (n1 * n2)

print("Mann-Whitney U Test Results:")
for score in change_scores:
    group_0_scores = groups['0'][score]
    group_1_and_2_scores = groups['1_and_2'][score]
    
    # Mann-Whitney U test
    stat, p_value = mannwhitneyu(group_0_scores, group_1_and_2_scores, alternative='two-sided')
    n1 = len(group_0_scores)
    n2 = len(group_1_and_2_scores)
    effect_size = rank_biserial_correlation(stat, n1, n2)
    
    print(f'{score}: Statistics={stat}, p-value={p_value}, Effect Size={effect_size:.3f}')
    #if p_value < 0.05:
        #print(f'There is a significant difference in {score} across the groups')
    #else:
        #print(f'There is no significant difference in {score} across the groups')
    #print()
