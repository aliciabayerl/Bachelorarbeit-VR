import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
import os

folder_path = 'POMS'
input_file = 'participant_scores.csv'
file_path = os.path.join(folder_path, input_file)
output_image_path = os.path.join(folder_path, 'Plot_Images')

data = pd.read_csv(file_path)

mood_states = ['Tension', 'Depression', 'Anger', 'Vigor', 'Fatigue', 'Confusion']

data.rename(columns={'After Anger_x': 'After Anger', 'Before Anger_x': 'Before Anger'}, inplace=True)
for mood in mood_states:
    data[f'Change_{mood}'] = data[f'After {mood}'] - data[f'Before {mood}']

summary_stats = {
    'Tension': {'p-value': 0.0687, 'd-value': -0.2885},
    'Depression': {'p-value': 0.0093, 'd-value': -0.4215},
    'Anger': {'p-value': 0.0362, 'd-value': -0.3343},
    'Vigor': {'p-value': 0.6569, 'd-value': -0.0690},
    'Fatigue': {'p-value': 0.0015, 'd-value': -0.5264},
    'Confusion': {'p-value': 0.4706, 'd-value': -0.1124}
}

# Plotting
# Plotting
plt.figure(figsize=(6, 4))  # Adjust figure size to be smaller
plt.rc('axes', labelsize=10)  # Fontsize of the x and y labels
plt.rc('xtick', labelsize=9)  # Fontsize of the x tick labels
plt.rc('ytick', labelsize=9)  # Fontsize of the y tick labels
plt.rc('legend', fontsize=9)  # Fontsize of the legend
plt.rc('font', family='sans-serif')  # Use a sans-serif font
plt.rc('font', **{'sans-serif': 'Arial'})  # Specifically use Arial

colors = ['#abd9e9' if stats['p-value'] > 0.05 else '#4575b4' for stats in summary_stats.values()]
bars = sns.barplot(x=list(summary_stats.keys()), y=[data[f'Change_{mood}'].mean() for mood in mood_states], palette=colors)

plt.xlabel('Mood State')
plt.ylabel('Average Change')
plt.axhline(0, color='black', linewidth=0.8) 



# Adding legend
from matplotlib.patches import Patch
legend_elements = [Patch(facecolor='#4575b4', label='Significant Change'),
                   Patch(facecolor='#abd9e9', label='Non-significant Change')]
plt.legend(handles=legend_elements)

# Save and show plot
output_image = os.path.join(output_image_path, 'POMS_Mood_Changes_Significance.png')
plt.tight_layout()
plt.savefig(output_image, dpi=300)
plt.show()

