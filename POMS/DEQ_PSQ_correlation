import os
import pandas as pd
from scipy.stats import spearmanr
import seaborn as sns
import matplotlib.pyplot as plt

folder_path = 'POMS'

participant_scores = os.path.join(folder_path, 'participant_scores_deq.csv')
data = pd.read_csv(participant_scores)

# Load PSQ-20 scores
psq20_scores_file = os.path.join(folder_path, 'participant_scores_psq.csv')  
psq20_scores = pd.read_csv(psq20_scores_file)

data['Change_Anger'] = data['After Anger'] - data['Before Anger']
data['Change_Disgust'] = data['After Disgust'] - data['Before Disgust']
data['Change_Fear'] = data['After Fear'] - data['Before Fear']
data['Change_Anxiety'] = data['After Anxiety'] - data['Before Anxiety']
data['Change_Sadness'] = data['After Sadness'] - data['Before Sadness']
data['Change_Desire'] = data['After Desire'] - data['Before Desire']
data['Change_Relaxation'] = data['After Relaxation'] - data['Before Relaxation']
data['Change_Happiness'] = data['After Happiness'] - data['Before Happiness']

change_scores = [
    'Change_Anger', 'Change_Disgust', 'Change_Fear', 'Change_Anxiety', 
    'Change_Sadness', 'Change_Desire', 'Change_Relaxation', 'Change_Happiness'
]

# Merge PSQ-20 and DEQ data
merged_data = pd.merge(psq20_scores, data, on='Participant')

# Function to calculate correlations
def calculate_correlations(data, target_variable, variables):
    correlations = {}
    for variable in variables:
        corr, p_val = spearmanr(data[target_variable], data[variable])
        correlations[variable] = (corr, p_val)
    return correlations

# Calculate and print correlations between PSQ-20 variables and DEQ change scores
psq20_variables = ['Overall_Score']  # Update with actual PSQ-20 column names if different
psq20_correlations_dict = {}

for psq20_variable in psq20_variables:
    psq20_correlations = calculate_correlations(merged_data, psq20_variable, change_scores)
    psq20_correlations_dict[psq20_variable] = psq20_correlations
    print(f"\nCorrelations with {psq20_variable}:")
    for variable, (corr, p_val) in psq20_correlations.items():
        print(f"Spearman correlation between {psq20_variable} and {variable}: {corr:.3f}, p-value={p_val:.4f}")

# Plotting the correlations for visualization
def plot_correlations(correlations_dict, title):
    variables = list(correlations_dict.keys())
    correlation_values = [corr[0] for corr in correlations_dict.values()]  # Extracting correlation coefficients

    plt.figure(figsize=(10, 6))
    plt.barh(variables, correlation_values, color='skyblue')
    plt.xlabel('Spearman Correlation')
    plt.title(title)
    plt.grid(True)
    plt.show()

for psq20_variable in psq20_variables:
    plot_correlations(psq20_correlations_dict[psq20_variable], f"Correlations with {psq20_variable}")
